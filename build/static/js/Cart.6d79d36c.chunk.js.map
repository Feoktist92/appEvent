{"version":3,"file":"static/js/Cart.6d79d36c.chunk.js","mappings":"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","sources":["components/Modal.tsx","pages/Cart.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { clearProducts, selectCart } from '../redux/slices/cartSlice';\nimport { useAppDispatch } from '../redux/store';\n\ntype ModalProps = {\n    open: boolean;\n    setOpen: (value: boolean) => void;\n};\n\nexport const Modal: React.FC<ModalProps> = ({ open, setOpen }) => {\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n    const [valueName, setValueName] = React.useState('');\n    const [valueTel, setValueTel] = React.useState('');\n    const [valueEmail, setValueEmail] = React.useState('');\n    const { totalPrice } = useSelector(selectCart);\n\n    const submitForm = () => {\n        if (!valueName || !valueTel || !valueEmail) {\n            alert('Пожалуйста, заполните все поля');\n            return;\n        } else {\n            alert('Спасибо за заказ! Мы скоро свяжемся с Вами!');\n            setOpen(false);\n            setValueName('');\n            setValueTel('');\n            setValueEmail('');\n            dispatch(clearProducts());\n            navigate('/cart');\n        }\n    };\n\n    return (\n        <div className={`overlay animated ${open ? `show` : ''}`}>\n            <div className='wrap'>\n                <div className='modal'>\n                    <svg\n                        height='200'\n                        viewBox='0 0 200 200'\n                        width='200'\n                        onClick={() => setOpen(false)}\n                    >\n                        <title />\n                        <path d='M114,100l49-49a9.9,9.9,0,0,0-14-14L100,86,51,37A9.9,9.9,0,0,0,37,51l49,49L37,149a9.9,9.9,0,0,0,14,14l49-49,49,49a9.9,9.9,0,0,0,14-14Z' />\n                    </svg>\n                    <h3 className='title'>Заполните форму</h3>\n                    <div className='form'>\n                        <input\n                            value={valueName}\n                            onChange={(e) => setValueName(e.target.value)}\n                            type='text'\n                            placeholder='Имя'\n                        />\n                        <input\n                            value={valueTel}\n                            onChange={(e) => setValueTel(e.target.value)}\n                            type='tel'\n                            placeholder='Телефон'\n                        />\n                        <input\n                            value={valueEmail}\n                            onChange={(e) => setValueEmail(e.target.value)}\n                            type='text'\n                            placeholder='E-mail'\n                        />\n                        <div className='total'>\n                            <span>\n                                Итог:\n                                <b> {totalPrice} ₽</b>\n                            </span>\n\n                            <input\n                                type='submit'\n                                value='Отправить'\n                                className='button pay-btn'\n                                onClick={submitForm}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React, { Suspense, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { clearProducts, selectCart } from '../redux/slices/cartSlice';\nimport { CartItem } from '../components/CartItem';\nimport { Cartempty } from '../components/Cartempty';\n\nimport { Modal } from '../components/Modal';\nimport { Loader } from '../components';\nimport { useAppDispatch } from '../redux/store';\n\nconst Cart: React.FC = () => {\n    const dispatch = useAppDispatch();\n    const { products, totalPrice } = useSelector(selectCart);\n    const [open, setOpen] = useState(false);\n\n    const totalCount = products.reduce(\n        (sum, product) => product.count + sum,\n        0\n    );\n    const onClickClear = () => {\n        if (window.confirm('Очистить корзину?')) dispatch(clearProducts());\n    };\n\n    if (!totalPrice) {\n        return (\n            <Suspense fallback={<Loader />}>\n                <Cartempty />\n            </Suspense>\n        );\n    }\n\n    return (\n        <div className='container container--cart'>\n            <div className='cart'>\n                <div className='cart__top'>\n                    <h2 className='content__title'>\n                        <svg\n                            width='18'\n                            height='18'\n                            viewBox='0 0 18 18'\n                            fill='none'\n                            xmlns='http://www.w3.org/2000/svg'\n                        >\n                            <path\n                                d='M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z'\n                                stroke='white'\n                                strokeWidth='1.8'\n                                strokeLinecap='round'\n                                strokeLinejoin='round'\n                            />\n                            <path\n                                d='M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z'\n                                stroke='white'\n                                strokeWidth='1.8'\n                                strokeLinecap='round'\n                                strokeLinejoin='round'\n                            />\n                            <path\n                                d='M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669'\n                                stroke='white'\n                                strokeWidth='1.8'\n                                strokeLinecap='round'\n                                strokeLinejoin='round'\n                            />\n                        </svg>\n                        Корзина\n                    </h2>\n                    <div className='cart__clear' onClick={onClickClear}>\n                        <svg\n                            width='20'\n                            height='20'\n                            viewBox='0 0 20 20'\n                            fill='none'\n                            xmlns='http://www.w3.org/2000/svg'\n                        >\n                            <path\n                                d='M2.5 5H4.16667H17.5'\n                                stroke='#B6B6B6'\n                                strokeWidth='1.2'\n                                strokeLinecap='round'\n                                strokeLinejoin='round'\n                            />\n                            <path\n                                d='M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z'\n                                stroke='#B6B6B6'\n                                strokeWidth='1.2'\n                                strokeLinecap='round'\n                                strokeLinejoin='round'\n                            />\n                            <path\n                                d='M8.33337 9.16667V14.1667'\n                                stroke='#B6B6B6'\n                                strokeWidth='1.2'\n                                strokeLinecap='round'\n                                strokeLinejoin='round'\n                            />\n                            <path\n                                d='M11.6666 9.16667V14.1667'\n                                stroke='#B6B6B6'\n                                strokeWidth='1.2'\n                                strokeLinecap='round'\n                                strokeLinejoin='round'\n                            />\n                        </svg>\n                        <span>Очистить корзину</span>\n                    </div>\n                </div>\n                <div className='content__items'>\n                    {products.map(\n                        (product: any) =>\n                            product.count > 0 && (\n                                <CartItem\n                                    {...product}\n                                    key={`${product.id}_${product.type}_${product.size}`}\n                                />\n                            )\n                    )}\n                </div>\n                <div className='cart__bottom'>\n                    <div className='cart__bottom-details'>\n                        <span>\n                            Всего: <b>{totalCount} шт.</b>\n                        </span>\n                        <span>\n                            Сумма заказа: <b>{totalPrice} ₽</b>\n                        </span>\n                    </div>\n                    <div className='cart__bottom-buttons'>\n                        <Link\n                            to='/'\n                            className='button button--outline button--order go-back-btn'\n                        >\n                            <svg\n                                width='8'\n                                height='14'\n                                viewBox='0 0 8 14'\n                                fill='none'\n                                xmlns='http://www.w3.org/2000/svg'\n                            >\n                                <path\n                                    d='M7 13L1 6.93015L6.86175 1'\n                                    stroke='#2b2b2b'\n                                    strokeWidth='1.5'\n                                    strokeLinecap='round'\n                                    strokeLinejoin='round'\n                                />\n                            </svg>\n                            <span>Вернуться назад</span>\n                        </Link>\n                        <div\n                            className='button pay-btn'\n                            onClick={() => setOpen(true)}\n                        >\n                            <span>Оформить заказ</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Modal open={open} setOpen={setOpen} />\n        </div>\n    );\n};\n\nexport default Cart;\n"],"names":["Modal","_ref","open","setOpen","dispatch","useAppDispatch","navigate","useNavigate","_React$useState","React","_React$useState2","_slicedToArray","valueName","setValueName","_React$useState3","_React$useState4","valueTel","setValueTel","_React$useState5","_React$useState6","valueEmail","setValueEmail","totalPrice","useSelector","selectCart","_jsx","className","concat","children","_jsxs","height","viewBox","width","onClick","d","value","onChange","e","target","type","placeholder","alert","clearProducts","_useSelector","products","_useState","useState","_useState2","totalCount","reduce","sum","product","count","fill","xmlns","stroke","strokeWidth","strokeLinecap","strokeLinejoin","window","confirm","map","_createElement","CartItem","_objectSpread","key","id","size","Link","to","Suspense","fallback","Loader","Cartempty"],"sourceRoot":""}